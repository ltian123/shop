mysql
	建表
	
	部门表
		部门编号(id,主键)、部门名称(name)、部门描述(description)
	
	员工表
		员工编号(id,主键)、员工名称(name)、员工性别(gender)、
		所属部门(dept_id,外键)、入职时间(joinTime)、工资(salary)、
		奖金(monery)、地址(address)、描述(description)、
		所属领导(m_id,外键)
		
		
	create table dept(
		id int primary key auto_increment,
		name varchar(20),
		description varchar(100)
	)engine=Innodb default charset=utf8;
	
	create table emp(
		id int primary key auto_increment,
		name varchar(20),
		gender varchar(5),
		dept_id int,
		joinTime date,
		salary double,
		monery double,
		address varchar(30),
		description varchar(100),
		m_id int,
		constraint FK_dept foreign key(dept_id) references dept(id),
		constraint FK_emp foreign key(m_id) references emp(id)
	)engine=Innodb default charset=utf8;
	
	外键的添加方式:
	方式一:
	dept_id int references dept(id)
	方式二:
	constraint FK_dept foreign key(dept_id) references dept(id)
	方式三:
	在建表之后添加外键约束
	alter table emp add foreign key(dept_id) references dept(id)
	
	
	向部门表中添加数据
	id			name		description
	1			董事部		.....
	2			财务部		.....
	3			人事部		.....
	4			研发部		.....
	5			市场部		.....
	6			教学部		.....
	7			就业部		.....
	
	insert into dept values(1,'董事部','我是董事长');
	insert into dept values(2,'财务部','我是财务部的');
	insert into dept values(3,'人事部','我是人事部的');
	insert into dept values(4,'研发部','我是研发部的');
	insert into dept values(5,'市场部','我是市场部的');
	insert into dept values(6,'教学部','我是教学部的');
	insert into dept values(7,'就业部','我是就业部的');
	
	
	向员工表中添加数据
	id	name	dept_id		salary	monery	m_id
	1	董事长	1			1000000	1000000	null
	2	财务总监2			100000	50000	1
	3	人事部长3			80000	80000	1
	4	研发主管4			50000	100000	1
	5	tom		2			30000	30000	2
	6	alice	3			20000	20000	3
	7	jack	4			50000	30000	4
	8	lily	3			10000	null	3
	9	json	3			12000	null	3
	
	insert into emp(id,name,gender,dept_id,joinTime,salary,monery,address,description,m_id) values(1,'董事长','男',1,'1995-07-07',1000000.0,1000000.0,'南京','我是董事长',null);
	
	insert into emp(id,name,gender,dept_id,joinTime,salary,monery,address,description,m_id) values(2,'财务总监','女',2,'1995-07-07',100000.0,50000.0,'南京','我是财务总监',1);
	
	insert into emp(id,name,gender,dept_id,joinTime,salary,monery,address,description,m_id) values(3,'人事部长','男',3,'1995-07-07',80000.0,80000.0,'南京','我是人事部长',1);
	
	insert into emp(id,name,gender,dept_id,joinTime,salary,monery,address,description,m_id) values(4,'研发主管','男',4,'1995-07-07',50000.0,100000.0,'南京','我是研发主管',1);
	
	insert into emp(id,name,gender,dept_id,joinTime,salary,monery,address,description,m_id) values(5,'tom','女',2,'1999-07-07',30000.0,30000.0,'南京','我是财务部的',2);
	
	insert into emp(id,name,gender,dept_id,joinTime,salary,monery,address,description,m_id) values(6,'alice','女',3,'2000-07-07',20000.0,20000.0,'南京','我是人事部的',3);
	
	insert into emp(id,name,gender,dept_id,joinTime,salary,monery,address,description,m_id) values(7,'jack','男',4,'2002-07-07',50000.0,30000.0,'南京','我是研发部的',4);
	
	insert into emp(id,name,gender,dept_id,joinTime,salary,monery,address,description,m_id) values(8,'lily','女',3,'2015-07-07',10000.0,null,'南京','我是人事部的',3);
	
	insert into emp(id,name,gender,dept_id,joinTime,salary,monery,address,description,m_id) values(9,'json','男',3,'2016-07-07',12000.0,null,'南京','我是人事部的',3);
	
	
	insert into emp(id,name,gender,dept_id,joinTime,salary,monery,address,description,m_id) values(10,'abc','男',null,'2016-07-07',12000.0,null,'南京','我是人事部的',3);
	
	
多表查询
	子查询:
		在某些情况下,当我们进行查询的时候,我们的条件需要使用到另一个查询结果的数据	
		为了给朱查询提供数据而进行的查询称之为子查询
	
	1.查询没有奖金的员工所在的部门名称
	select id,name,monery,dept_id,m_id from emp where monery is null;
	
	select name from dept where id = ?
	
	
	select dept_id from emp where monery is null;
	
	select name from dept where id in (select dept_id from emp where monery is null)
	
	2.查询没有员工的部门的部门名称
		select dept_id from emp
		select name from dept where id not in (select dept_id from emp)
	
	3.查询所有领导的姓名
		select m_id from emp where m_id is not null;
		
		select name from emp where id in (select m_id from emp where m_id is not null);
	
	4.查询哪些人不是领导
	
		select name from emp where id not in (select m_id from emp where m_id is not null);
	
	
	连接查询
		连接查询一般是建立在相互关系的父子表上
		
		内连接
			只列出了这些连接表中与连接条件相匹配的数据行
			inner join ... on 连接条件
		
		外连接
			左外连接
				只显示与左表有关系的数据
				语法:left join .. on  ..
				
				select emp.id,emp.name,emp.dept_id,dept.name 
				from emp
				left join dept 
				on dept.id = emp.dept_id
			
				select emp.id,emp.name,emp.dept_id,dept.name 
				from dept
				left join emp 
				on dept.id = emp.dept_id
				
				
				
			右外连接
				只显示与右表有关系的数据
				select emp.id,emp.name,emp.dept_id,dept.name 
				from emp
				right join dept 
				on dept.id = emp.dept_id
				
				
			全连接
				显示与两个表有关系的数据
				full join
		
		
			
		1.查询没有奖金的员工所在的部门名称
			select e.id,e.name,e.dept_id,d.name 
			from emp e
			inner join dept d 
			on d.id = e.dept_id
			where e.monery is null;
			
			
			select e.id,e.name,e.dept_id,d.name 
			from emp e
			left join dept d 
			on d.id = e.dept_id
			where e.dept_id is not null
			and e.monery is null;
			
		
		2.查询没有员工的部门的部门名称
		select e.id, d.name
		from emp e 
		right join dept d 
		on e.dept_id = d.id
		where e.id is null
			
		3.查询所有领导的姓名
		select distinct m.name
		from emp e
		right join emp m
		on e.m_id = m.id
		where e.id is not null;
		
		select distinct m.name
		from emp e
		inner join emp m
		on e.m_id = m.id
		
		
		
		
		4.查询哪些人不是领导
		
		
		
		交叉连接
		
	
	
	
	
	
	
	
	
	
	