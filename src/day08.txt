cookie与session的区别
	cookie
		数据保存在客户端
		cookie只能保存字符串(编码只能是ISO8859-1)
		cookie保存在客户端,安全性较差
		cookie存放的数据大小有限制,跟浏览器有关,一般在4K左右
		分担了服务器的压力
	
	
	session
		数据保存在服务器端
		能保存任意类似数据
		相对安全
		只要服务器内存够,随便存放
		增加服务器压力
		
		
过滤器
	Filter
		过滤器是web规范的一种类型
		可以在Servlet执行业务处理的前后添加一些功能
		
		
		常用于:
			编码的处理
			日志
			安全的控制
			权限的控制
			
		开发:	
			1.编写过滤器类
				实现Filter接口
				实现doFilter方法
				
			2.在web.xml中配置过滤器
			
		
		在过滤器的配置中,初始化参数只能配置一个,不能有多个值
		现在要求过滤多个ip地址,怎么办?
		
application
	ServletContext,Servlet上下文
	服务器启动时
	会为每一个已经部署好的应用,创建一个唯一的对象
	要求实现了ServletContext接口,服务器实现
	该对象一直存在,调用跟整个应用相关的一些功能
	
	常用于:
		1.绑定数据
		
		2.可以访问全局的初始化参数
		
		3.调用跟整个应用相关的一些功能
	
监听器
	web规范定义的一种类型
	作用
		监听ServletContext、HttpSession、HttpServletRequest的创建以及销毁事件
		以及以上三种对象上绑定、取消、替换数据的事件
		并将这些事件给响应事件的监听来处理		
		
		
		开发一个监听器
		1.编写java代码
		需要根据下列不同情况实现不同的接口
		创建销毁事件
			ServletContextListener
			HttpSessionListener
			ServletRequestListener
		绑定、取消、替换数据事件
			ServletContextAttributeListener
			HttpSessionAttributeListener
			ServletRequestAttributeListener
		
			
		2.配置web.xml
		
EL表达式和JSTL标签
	使得jsp页面不在出现java代码
	
	el表达式:表达式语言
	是官方在jsp中定义的一种语法规范
	
	语法:
		${表达式}
		
	作用:
		1.能够访问作用域
			pageContext
			request
			session
			application
			
			jsp引擎先执行pageContext.getAttribute(key)找数据
			如果找不到,依次到request、session、application域中找数据
			如果在某个域中找到了数据
			则不再往下查找
			找到以后作为一个html代码输出到浏览器
			如果所有的区域都没有找到
			则什么都不显示
	
		EL表达式的隐式对象(11个)
		pageScope				访问page范围的属性名称所对应的值
		requestScope			访问request范围的属性名称所对应的值
		sessionScope			访问session范围的属性名称所对应的值
		applicationScope		访问application范围的属性名称所对应的值
		pageContext				表示此JSP的pageContext
		param
		paranValues
		header
		headerValues
		cookie
		initParam



		2.访问对象中的属性
			对象.get属性
			语法:${对象.属性}
				这里的属性对应的是get/set方法
				取属性实际上就是get

			如果是一个对象的集合,想取出集合中的对象
			通过下标取


		3.计算
		在el表达式内部做计算
		字符串比较
			${"aaa" eq "bbb"}
		
		
		4.获取请求参数
		${param.参数名}
		
		5.访问自定义方法
		
		
		
		
		
		